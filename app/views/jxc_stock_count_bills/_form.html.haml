- if @operation == 'show'
  %div.btn-group.btn-corner{style:'padding-bottom:8px;'}
    %button.btn.btn-success#audit_in_advance{onclick:'audit_in_advance()',disabled:@jxc_stock_count_bill.bill_status == '0'? false:true}
      预审核
    %button.btn.btn-primary#generate_pl_bill{onclick:'generate_pl_bill()',disabled:@jxc_stock_count_bill.bill_status == '1' ? false:true}
      生成盈亏单
    %button.btn.btn-primary#finally_confirm{onclick:'finally_confirm()',disabled:@jxc_stock_count_bill.bill_status == '1' ? false:true}
      最终确认
    %button.btn.btn-inverse#invalid{onclick:'invalid()',disabled:@jxc_stock_count_bill.bill_status == '0'? false : true }
      作废
= form_for @jxc_stock_count_bill, remote:true do |f|
  - if @jxc_stock_count_bill.errors.any?
    #error_explanation
      %h2= "#{pluralize(@jxc_stock_count_bill.errors.count, "error")} prohibited this jxc_stock_count_bill from being saved:"
      %ul
        - @jxc_stock_count_bill.errors.full_messages.each do |msg|
          %li= msg

  %table{class: "table table-bordered table-hover"}
    %tr
      %td
        = f.label :bill_no
      %td
        = f.text_field :bill_no,:class=>'form-control',readonly:'true'
        = f.hidden_field :id
        = f.hidden_field :bill_status
      %td
        = f.label :customize_bill_no
      %td
        = f.text_field :customize_bill_no,:class=>'form-control'
    %tr
      %td
        = f.label :check_date
      %td
        -#= f.text_field :check_date,:class=>'form-control datepicker',:readonly => true
        %input.form-control.datepicker#jxc_stock_count_bill_check_date{type:'text',name:'jxc_stock_count_bill[check_date]',readonly:true,value:@jxc_stock_count_bill.check_date.present? ? @jxc_stock_count_bill.check_date.strftime('%m/%d/%Y') : ''}
      %td
        = f.label :remark
      %td
        = f.text_field :remark,:class=>'form-control'
    %tr
      %td
        = f.button t('mongoid.attributes.jxc_stock_count_bill.jxc_storage'),type:'button',class:'btn btn-white btn-success',onclick:'getJxcStorageInfo()',disabled: @operation == 'show' ? true:false
      %td
        %input.form-control#jxc_stock_count_bill_jxc_storage{value: @jxc_stock_count_bill.jxc_storage.nil? ? '':@jxc_stock_count_bill.jxc_storage.storage_name,readonly:true }
        = f.hidden_field :storage_id
      %td
        = f.label :handler
      %td
        %input.form-control#jxc_stock_count_bill_handler{value: @jxc_stock_count_bill.handler[0].nil? ? '':@jxc_stock_count_bill.handler[0].name,readonly:true }
        = f.hidden_field :handler_id
    %tr
      %td
        = f.button '单据明细',type:'button',class:'btn btn-white btn-success',onclick:'getProductsInfo()',disabled: @operation == 'show' ? true:false
      %td{colspan:3}
        %table.table.table-bordered
          %thead
            %th{style:'width:150px;'}
              商品名称
            %th
              商品编码
            %th
              规格
            %th
              单位
            %th
              成本价
            %th
              库存数量
            %th
              盘点数量
            %th
              复盘数量
            %th
              盈亏数量
            %th
              盈亏金额
            %th
              备注
            %th
              操作
          %tbody#billDetail
            - if !@bill_details.blank?
              - @bill_details.each do |billDetail|
                %tr{id:billDetail.product.id}
                  %td
                    = billDetail.product.title
                    %input#billDetail_id{type:'hidden',name:'billDetail[][id]',value:billDetail.id}
                    %input#billDetail_product_id{type:'hidden',name:'billDetail[][product_id]',value:billDetail.product.id}
                  %td
                    = billDetail.product.qrcode
                  %td
                    = billDetail.product.specification
                  %td
                    %input#billDetail_unit.billDetailInput{type:'text',name:'billDetail[][unit]',value:billDetail.unit}
                  %td
                    %input#billDetail_price.billDetailInput{type:'text',name:'billDetail[][price]',value:billDetail.price,readonly:true}
                  %td
                    %input#billDetail_inventory_count.billDetailInput{type:'text',name:'billDetail[][inventory_count]',value:billDetail.inventory_count,readonly:true}
                  %td
                    %input#billDetail_check_count.billDetailInput{type:'text',name:'billDetail[][check_count]',value:billDetail.check_count,onblur:'calcPLCount(\''+billDetail.product.id+'\',this)'}
                  %td
                    %input#billDetail_recheck_count.billDetailInput{type:'text',name:'billDetail[][recheck_count]',value:billDetail.recheck_count,onblur:'calcPLCount(\''+billDetail.product.id+'\',this)'}
                  %td
                    %input#billDetail_count.billDetailInput{type:'text',name:'billDetail[][pl_count]',value:billDetail.pl_count,readonly:true}
                  %td
                    %input#billDetail_amount.billDetailInput{type:'text',name:'billDetail[][pl_amount]',value:billDetail.pl_amount,readonly:true}
                  %td
                    %input#billDetail_remark.billDetailInput{type:'text',name:'billDetail[][remark]',value:billDetail.remark}
                  %td.del-icon-td
                    %i.red.ace-icon.fa.fa-trash-o.bigger-130.del-icon{onclick:'delBillDetail("'+billDetail.product.id+'")'}

    - if @operation == 'show'
      %tr
        %td
          = f.label :bill_maker
        %td
          = f.text_field :bill_maker,:class=>'form-control',readonly:true
        %td
          = f.label :bill_status
        %td
          %input.form-control#bill_status{readonly:true,value:@billStatus,style:'color:#d15b47;'}

  .actions
    = f.submit '保存',class:'btn btn-info',style:'display:'+(@operation == 'show' ? 'none':'inline' )+''
    &nbsp;&nbsp;&nbsp;
    %a{class:'btn','data-href': jxc_stock_count_bills_path}
      %i{class:'ace-icon fa fa-return bigger-110'}返回

=render 'jxc_modal/jxc_common_modal'

:javascript

  //zTree默认设置
  var zTreeSetting = {
    async:{
      url:'',
      type:'get',
      enable:true
    },
    view: {
      dblClickExpand: false,
      showLine: true,
      selectedMulti: false
    },
    data: {
      key:{
        name:"",
        url:"#"
      },
      simpleData: {
        enable:true,
        idKey: "_id",
        pIdKey: "parent_id",
        rootPId: ""
      }
    },
    callback: {}
  };

  //EasyUI DataGrid设置
  var tableSetting = {};

  //选择仓库信息
  function getJxcStorageInfo(){
    $('.modal-title').text('选择入货仓库');
    $('.modal-dialog').addClass('tree-table');
    $('#jxc-select-tree').removeClass('jxc-disappear-tree');
    $('#jxc-select-table').addClass('jxc-select-table');
    $('#confirm-button').attr('data-type','storage');

    //zTree设置
    zTreeSetting.async.url = '/jxc_common_info/getStorageTypesInfo';
    zTreeSetting.data.key.name = 'dic';
    zTreeSetting.callback = {
      onClick: function(event,treeId,treeNode){
        tableSetting.queryParams = {
          storage_type:treeNode.dic
        };
        initDataGrid(tableSetting);
      }
    };

    //dataGrid设置
    tableSetting = {
      title: '仓库信息',
      url:'/jxc_common_info/getStorageInfo',
      width:600,
      singleSelect:true,
      queryParams:{},
      columns:[[
        {title:'仓库名称',field:'storage_name',width:'18%'},
        {title:'管理人',field:'admin',width:'18%'},
        {title:'联系电话',field:'admin_phone',width:'18%'},
        {title:'仓库地址',field:'address',width:'28%'},
        {title:'备注',field:'memo',width:'18%'}
      ]]
    };

    $('#selectModal').modal('show');

    //初始化树和表
    initZTree(zTreeSetting);
    initDataGrid(tableSetting);
  }


  //选择单据明细
  function getProductsInfo(){
    var storage_id = $('#jxc_stock_count_bill_storage_id').val();

    if(storage_id == ""){
      alert("请先选择盘点仓库!");
      return;
    }

    $('.modal-title').text('选择单据明细');
    $('.modal-dialog').addClass('tree-table');
    $('#jxc-select-tree').removeClass('jxc-disappear-tree');
    $('#jxc-select-table').addClass('jxc-select-table');
    $('#confirm-button').attr('data-type','product');

    //zTree设置
    zTreeSetting.async.url = '/jxc_common_info/getProductCategoriesInfo';
    zTreeSetting.data.key.name = 'title';
    zTreeSetting.callback = {
      onClick: function(event,treeId,treeNode){
        tableSetting.queryParams = {
          category_id:treeNode._id,
          storage_id:storage_id
        };
        initDataGrid(tableSetting);
      }
    };

    //dataGrid设置
    tableSetting = {
      title: '商品信息',
      url:'/jxc_common_info/getBillDetailInfo',
      width:600,
      singleSelect:false,
      queryParams:{},
      columns:[[
        {title:'名称',field:'title',width:'25%'},
        {title:'品牌',field:'brand',width:'15%'},
        {title:'规格',field:'specification',width:'14%'},
        {title:'单位',field:'unit',width:'10%'},
        {title:'成本价',field:'cost_price',width:'10%'},
        {title:'库存数量',field:'count',width:'11%'},
        {title:'库存金额',field:'amount',width:'15%'}
      ]]
    };

    $('#selectModal').modal('show');
    
    //初始化树和表
    initZTree(zTreeSetting);
    initDataGrid(tableSetting);

  }


  function selectData(){
    var dataType = $('#confirm-button').attr('data-type');
    var selectData = $('#dataTable').datagrid('getSelections');

    if(selectData.length == 0){
      alert('请选择数据');
    }else{
      if(dataType == 'storage'){
        $('#jxc_stock_count_bill_jxc_storage').val(selectData[0].storage_name);
        $('#jxc_stock_count_bill_storage_id').val(selectData[0]._id);
      }else if(dataType == 'handler'){
        $('#jxc_stock_count_bill_handler').val(selectData[0].name);
        $('#jxc_stock_count_bill_handler_id').val(selectData[0]._id);
      }else if(dataType == 'product'){

        var billDetailTable = '';

        $(selectData).each(function(){
          billDetailTable += '<tr id='+this.id+'>'+             //商品ID
                         '<td>'+this.title+'<input type="hidden" id="billDetail_product_id" name="billDetail[][product_id]" value="'+this.id+'">'+'</td>'+         //商品名称 & 商品ID
                         '<td>'+this.qrcode+'</td>'+          //商品编码
                         '<td>'+this.specification+'</td>'+ //商品规格
                         '<td><input type="text" class="billDetailInput" id="billDetail_unit" name="billDetail[][unit]" value="'+(this.unit == undefined ? '':this.unit)+'"></td>'+    //单位
                         '<td><input type="text" class="billDetailInput" id="billDetail_price" name="billDetail[][price]" value="'+this.cost_price+'" readonly ></td>'+    //成本价
                         '<td><input type="text" class="billDetailInput" id="billDetail_inventory_count" name="billDetail[][inventory_count]" value="'+this.count+'" readonly ></td>'+    //库存数量
                         '<td><input type="text" class="billDetailInput" id="billDetail_check_count" name="billDetail[][check_count]" value="0" onblur="calcPLCount(\''+this.id+'\',this)"></td>'+    //盘点数量
                         '<td><input type="text" class="billDetailInput" id="billDetail_recheck_count" name="billDetail[][recheck_count]" value="0" onblur="calcPLCount(\''+this.id+'\',this)"></td>'+    //复盘数量
                         '<td><input type="text" class="billDetailInput" id="billDetail_count" name="billDetail[][pl_count]" value="0" readonly></td>'+    //盈亏数量
                         '<td><input type="text" class="billDetailInput" id="billDetail_amount" value="0.00" readonly></td>'+    //金额
                         '<td><input type="text" class="billDetailInput" id="billDetail_remark" name="billDetail[][remark]"></td>'+    //备注
                         '<td class="del-icon-td"><i class="red ace-icon fa fa-trash-o bigger-130 del-icon" onclick="delBillDetail(\''+this.id+'\')"></i></td>'+    //删除
                         '</tr>';
        });

        $('#billDetail').append(billDetailTable);
      }

      //模态框隐藏
      $('#selectModal').modal('hide');
    }
  }


  //删除单据商品详情
  function delBillDetail(detailID){
    $('#'+detailID).remove();
  }


  // 单据预审核
  function audit_in_advance(){
    $.post('audit_in_advance',{id:$('#jxc_stock_count_bill_id').val()},function(resData){
      alert(resData.msg);
      if(resData.flag == 1){
        $('#audit_in_advance').attr('disabled',true);
        $('#generate_pl_bill').attr('disabled',false);
        $('#finally_confirm').attr('disabled',false);
        $('#invalid').attr('disabled',true);
        $('#bill_status').val('已预审');
      }
    });
  }

  // 单据生成盈亏单
  function generate_pl_bill(){
    $.post('generate_pl_bill',{id:$('#jxc_stock_count_bill_id').val()},function(resData){
      alert(resData.msg);
      if(resData.flag == 1){
        $('#audit_in_advance').attr('disabled',true);
        $('#generate_pl_bill').attr('disabled',false);
        $('#finally_confirm').attr('disabled',false);
        $('#invalid').attr('disabled',true);
        $('#bill_status').val('已预审');
      }
    });
  }

  // 单据最终确认
  function finally_confirm(){
    $.post('finally_confirm',{id:$('#jxc_stock_count_bill_id').val()},function(resData){
      alert(resData.msg);
      if (resData.flag == 1){
        $('#audit_in_advance').attr('disabled',true);
        $('#generate_pl_bill').attr('disabled',true);
        $('#finally_confirm').attr('disabled',true);
        $('#invalid').attr('disabled',true);
        $('#bill_status').val('已确认');
      }
    });
  }

  // 单据作废
  function invalid(){
    $.post('invalid',{id:$('#jxc_stock_count_bill_id').val()},function(resData){
      alert(resData.msg);
      if(resData.flag == 1){
        $('#audit_in_advance').attr('disabled',true);
        $('#generate_pl_bill').attr('disabled',true);
        $('#finally_confirm').attr('disabled',true);
        $('#invalid').attr('disabled',true);
        $('#bill_status').val('已作废');
      }
    });
  }
